import requests
import paramiko
from datetime import datetime

# Configuration
TOKEN = '???????????'
ENTERPRISE = 'sl-githubtraining'
URL = f'https://github.com/organizations/sl-githubtraining/settings/audit-log'
HEADERS = {
    'Authorization': f'Bearer {TOKEN}'

# SCP Configuration
HOSTNAME = '13.247.61.78'
PORT = 22
USERNAME = 'absl530-'
PASSWORD = 'your_password'
REMOTE_PATH = '/path/to/destination/'

def fetch_audit_logs():
    response = requests.get(URL, headers=HEADERS)
    if response.status_code == 200:
        filename = f'audit_log_{datetime.now().strftime("%Y%m%d%H%M%S")}.json'
        with open(filename, 'w') as file:
            file.write(response.text)
        print(f'Successfully saved audit logs to {filename}')
        return filename
    else:
        print(f'Failed to fetch audit logs: {response.status_code}')
        return None

def upload_to_server(local_file):
    try:
        transport = paramiko.Transport((HOSTNAME, PORT))
        transport.connect(username=USERNAME, password=PASSWORD)
        sftp = paramiko.SFTPClient.from_transport(transport)
        remote_file = REMOTE_PATH + local_file
        sftp.put(local_file, remote_file)
        sftp.close()
        transport.close()
        print(f'Successfully uploaded {local_file} to {remote_file}')
    except Exception as e:
        print(f'Failed to upload {local_file}: {e}')

if __name__ == '__main__':
    local_file = fetch_audit_logs()
    if local_file:
        upload_to_server(local_file)
